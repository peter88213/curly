<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Revert" script:language="StarBasic">REM  *****  BASIC  *****
&apos; ----------------------------------------------------------------------
&apos; Go back to &quot;typewriter&quot; style.
&apos; ----------------------------------------------------------------------

Option Explicit

&apos; ----------------------------------------------------------------------
&apos; Define quote substitutes for intermediate formatting
&apos; ----------------------------------------------------------------------
Const sChopen1 = &quot;┌&quot;
Const sChClose1 = &quot;┐&quot;
Const sChopen2 = &quot;└&quot;
Const sChClose2 = &quot;┘&quot;
Const sChApostrophe = &quot;│&quot;

&apos; ----------------------------------------------------------------------
&apos; Define characters for convenience
&apos; ----------------------------------------------------------------------
Const ChEnDash = &quot;–&quot;
Const ChEmDash = &quot;—&quot;
Const ChEllipsis = &quot;…&quot;
Const ChApostrophe = &quot;’&quot;


sub PrimeI
&apos; ----------------------------------------------------------------------
&apos; Convert substituted quotes into primes.
&apos; Initial quotation is single (&apos;)
&apos; ----------------------------------------------------------------------

Dim AOldStr(5) As String
Dim ANewStr(5) As String

AOldStr() = Array(sChOpen1,sChClose1,sChOpen2,sChClose2,sChApostrophe,&quot;([:alpha:])#([:alpha:])&quot;)
ANewStr() = Array(Chr(34),Chr(34),&quot;&apos;&quot;,&quot;&apos;&quot;,&quot;#&quot;,&quot;$1&apos;$2&quot;)

Common.sar(AOldStr,ANewStr,True)

End Sub



sub PrimeII
&apos; ----------------------------------------------------------------------
&apos; Convert substituted quotes into primes.
&apos; Initial quotation is double (&quot;)
&apos; ----------------------------------------------------------------------

Dim AOldStr(5) As String
Dim ANewStr(5) As String

AOldStr() = Array(sChOpen1,sChClose1,sChOpen2,sChClose2,sChApostrophe,&quot;([:alpha:])#([:alpha:])&quot;)
ANewStr() = Array(&quot;&apos;&quot;,&quot;&apos;&quot;,Chr(34),Chr(34),&quot;#&quot;,&quot;$1&apos;$2&quot;)

Common.sar(AOldStr,ANewStr,True)

End Sub



Sub Ellipsis
&apos; ----------------------------------------------------------------------
&apos; Convert ellipses into triple periods.
&apos; ----------------------------------------------------------------------

Dim AOldStr(0) As String
Dim ANewStr(0) As String

AOldStr() = Array(ChEllipsis)
ANewStr() = Array(&quot;...&quot;)

common.sar(AOldStr,ANewStr,False)

End Sub



Sub Apostrophe
&apos; ----------------------------------------------------------------------
&apos; Convert detectable apostrophes into primes.
&apos; ----------------------------------------------------------------------

Dim AOldStr(0) As String
Dim ANewStr(0) As String

AOldStr() = Array(&quot;([:alpha:])&quot;+ChApostrophe+&quot;([:alpha:])&quot;)
ANewStr() = Array(&quot;$1&apos;$2&quot;)

sar(AOldStr,ANewStr,True)

End Sub



sub Dash
&apos; ----------------------------------------------------------------------
&apos; Convert en-dashes and em-dashes into double hyphens.
&apos; ----------------------------------------------------------------------

Dim AOldStr(1) As String
Dim ANewStr(1) As String

AOldStr() = Array(ChEnDash,ChEmDash)
ANewStr() = Array(&quot;--&quot;,&quot;--&quot;)

common.sar(AOldStr,ANewStr,False)

End Sub



Sub UnprotectQM
&apos; ----------------------------------------------------------------------
&apos; Replace non-breakable spaces by simple spaces at double hyphens
&apos; and triple periods leading or terminating direct speech.
&apos; ----------------------------------------------------------------------

Dim AOldStr(3) As String
Dim ANewStr(3) As String

AOldStr() = Array(Chr(160)+&quot;--&quot;+Chr(34),Chr(34)+&quot;--&quot;+Chr(160),Chr(160)+&quot;...&quot;+Chr(34),Chr(34)+&quot;...&quot;+Chr(160))
ANewStr() = Array(&quot; --&quot;+Chr(34),Chr(34)+&quot;-- &quot;,&quot; ...&quot;+Chr(34),Chr(34)+&quot;... &quot;)

common.sar(AOldStr,ANewStr,False)

End Sub




</script:module>